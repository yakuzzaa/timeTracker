basePath: /api
definitions:
  serializers.CreateTaskResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  serializers.CreateUserRequest:
    properties:
      passport:
        type: string
    required:
    - passport
    type: object
  serializers.CreateUserResponse:
    properties:
      id:
        type: string
    type: object
  serializers.DeleteUserResponse:
    properties:
      status:
        type: string
    type: object
  serializers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  serializers.GetTaskResponse:
    properties:
      info:
        items:
          $ref: '#/definitions/serializers.Task'
        type: array
    type: object
  serializers.GetUsersResponse:
    properties:
      info:
        items:
          $ref: '#/definitions/serializers.User'
        type: array
    type: object
  serializers.Task:
    properties:
      endTime:
        type: string
      id:
        type: string
      startTime:
        type: string
      total:
        type: string
      userID:
        type: string
    type: object
  serializers.UpdateTaskRequest:
    properties:
      task_id:
        type: string
    type: object
  serializers.UpdateTaskResponse:
    properties:
      status:
        type: string
    type: object
  serializers.UpdateUserRequest:
    properties:
      address:
        type: string
      name:
        type: string
      passportNumber:
        type: string
      passportSeries:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  serializers.UpdateUserResponse:
    properties:
      status:
        type: string
    type: object
  serializers.User:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      passportNumber:
        type: string
      passportSeries:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for time tracking app
  title: TimeTracker API
  version: "1.0"
paths:
  /tasks/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieves all tasks of a user, sorted by descending total time
        spent
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializers.GetTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Get tasks
      tags:
      - tasks
  /tasks/end_timing/{user_id}:
    put:
      consumes:
      - application/json
      description: Updates a task (ends the timer)
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/serializers.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializers.UpdateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Update task
      tags:
      - tasks
  /tasks/start_timing/{user_id}:
    post:
      consumes:
      - application/json
      description: Creates a new task for a user and starts the timer
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/serializers.CreateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Create task
      tags:
      - tasks
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user based on the data provided in the request body
      parameters:
      - description: Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/serializers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/serializers.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the user with the specified identifier
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializers.DeleteUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Delete user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates information of the user with the specified identifier
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/serializers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializers.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Update user data
      tags:
      - users
  /users/info:
    get:
      consumes:
      - application/json
      description: Returns a list of users with optional filtering and pagination
        capabilities
      parameters:
      - description: User ID
        in: query
        name: id
        type: string
      - description: Passport series
        in: query
        name: passportSeries
        type: string
      - description: Passport number
        in: query
        name: passportNumber
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Address
        in: query
        name: address
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializers.GetUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/serializers.ErrorResponse'
      summary: Retrieve a list of users
      tags:
      - users
swagger: "2.0"
